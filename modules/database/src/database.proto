syntax = 'proto3';
package database;

message SetSchemaExtensionRequest {
    SchemaExtension extension = 1;
}

message GetSchemaRequest {
    string schemaName = 1;
}

message GetSchemasRequest {
}

message GetSchemasResponse {
    repeated Schema schemas = 1;
}
message DropCollectionResponse{
    string result = 1;
}

message Schema {
    string name = 1;
    string fields = 2;
    string options = 3;
    string collectionName = 4;
}

message SchemaExtension {
    string name = 1;
    string fields = 2;
}

message FindOneRequest {
    string schemaName = 1;
    string query = 2;
    optional string select = 3;
    repeated string populate = 4;
}

message FindRequest {
    string schemaName = 1;
    string query = 2;
    optional string select = 3;
    optional int32 skip = 4;
    optional int32 limit = 5;
    optional string sort = 6;
    repeated string populate = 7;
}

message QueryResponse {
    string result = 1;
}

message QueryRequest {
    string schemaName = 1;
    string query = 2;
}

message UpdateRequest {
    string schemaName = 1;
    string id = 2;
    string query = 3;
    optional bool updateProvidedOnly = 4;
    repeated string populate = 5;
}

message UpdateManyRequest {
    string schemaName = 1;
    string filterQuery = 2;
    string query = 3;
    optional bool updateProvidedOnly = 4;
}

message DropCollectionRequest{
    string schemaName = 1;
    bool deleteData = 2;
}

service DatabaseProvider {
    rpc CreateSchemaFromAdapter(Schema) returns (Schema);
    rpc GetSchema (GetSchemaRequest) returns (Schema);
    rpc GetSchemas(GetSchemasRequest) returns (GetSchemasResponse);
    rpc DeleteSchema(DropCollectionRequest) returns (DropCollectionResponse);
    rpc SetSchemaExtension(SetSchemaExtensionRequest) returns (Schema);
    // Database queries
    rpc findOne (FindOneRequest) returns (QueryResponse);
    rpc findMany (FindRequest) returns (QueryResponse);
    rpc create (QueryRequest) returns (QueryResponse);
    rpc createMany(QueryRequest) returns (QueryResponse);
    rpc deleteOne (QueryRequest) returns (QueryResponse);
    rpc deleteMany (QueryRequest) returns (QueryResponse);
    rpc findByIdAndUpdate (UpdateRequest) returns (QueryResponse);
    rpc updateMany(UpdateManyRequest) returns (QueryResponse);
    rpc countDocuments (QueryRequest) returns (QueryResponse);
}
