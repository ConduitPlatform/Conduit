syntax = 'proto3';
package databaseprovider;

message CreateSchemaRequest {
    Schema schema = 1;
}

message CreateSchemaResponse {
    Schema schema = 1;
}

message GetSchemaRequest {
    string schemaName = 1;
}

message GetSchemaResponse {
    Schema schema = 1;
}

message GetSchemasRequest {
}

message GetSchemasResponse {
    repeated Schema schemas = 1;
}

message Schema {
    string name = 1;
    string modelSchema = 2;
    string modelOptions = 3;
}

message FindOneRequest {
    string schemaName = 1;
    string query = 2;
    string select = 3;
    repeated string populate = 4;
}

message FindRequest {
    string schemaName = 1;
    string query = 2;
    string select = 3;
    int32 skip = 4;
    int32 limit = 5;
    string sort = 6;
    repeated string populate = 7;
}

message QueryResponse {
    string result = 1;
}

message QueryRequest {
    string schemaName = 1;
    string query = 2;
}

message UpdateRequest {
    string schemaName = 1;
    string id = 2;
    string query = 3;
}

message UpdateManyRequest {
    string schemaName = 1;
    string filterQuery = 2;
    string query = 3;
}

service DatabaseProvider {
    rpc CreateSchemaFromAdapter (CreateSchemaRequest) returns (CreateSchemaResponse);
    rpc GetSchema (GetSchemaRequest) returns (GetSchemaResponse);
    rpc GetSchemas(GetSchemasRequest) returns (GetSchemasResponse);
    // Database queries
    rpc findOne (FindOneRequest) returns (QueryResponse);
    rpc findMany (FindRequest) returns (QueryResponse);
    rpc create (QueryRequest) returns (QueryResponse);
    rpc createMany(QueryRequest) returns (QueryResponse);
    rpc deleteOne (QueryRequest) returns (QueryResponse);
    rpc deleteMany (QueryRequest) returns (QueryResponse);
    rpc findByIdAndUpdate (UpdateRequest) returns (QueryResponse);
    rpc updateMany(UpdateManyRequest) returns (QueryResponse);
    rpc countDocuments (QueryRequest) returns (QueryResponse);
}
